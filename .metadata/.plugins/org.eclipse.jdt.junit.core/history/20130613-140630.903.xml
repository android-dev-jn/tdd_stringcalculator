<?xml version="1.0" encoding="UTF-8"?><testrun name="StringCalculator09" project="StringCalculator09" tests="9" started="9" failures="0" errors="1" ignored="0">
  <testsuite name="Calculator.CalculatorTest" time="0.0">
    <testcase name="handleEmptyString" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleNonInput" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleSingleNumber" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleDelimiter" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleNewLine" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleNewDelimiter" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleNegativeNumber" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleLargerThanThousand" classname="Calculator.CalculatorTest" time="0.0"/>
    <testcase name="handleMoreThanOneChar" classname="Calculator.CalculatorTest" time="0.0">
      <error>java.util.regex.PatternSyntaxException: Dangling meta character '*' near index 0&#13;
***&#13;
^&#13;
	at java.util.regex.Pattern.error(Unknown Source)&#13;
	at java.util.regex.Pattern.sequence(Unknown Source)&#13;
	at java.util.regex.Pattern.expr(Unknown Source)&#13;
	at java.util.regex.Pattern.compile(Unknown Source)&#13;
	at java.util.regex.Pattern.&lt;init&gt;(Unknown Source)&#13;
	at java.util.regex.Pattern.compile(Unknown Source)&#13;
	at java.lang.String.split(Unknown Source)&#13;
	at java.lang.String.split(Unknown Source)&#13;
	at Calculator.Calculator.add(Calculator.java:29)&#13;
	at Calculator.CalculatorTest.handleMoreThanOneChar(CalculatorTest.java:48)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
